import main.ast
import main.ast_stmt
import main.ast_type

adt MaybeAstExpr
	Nothing
	Just(expr:AstExpr)
end

adt AstExprList
	Nil
	Cons(expr:AstExpr, tail:AstExprList)
end

adt BinOp
	CmpEQ
	CmpNE
	CmpLT
	CmpGT
	CmpLE
	CmpGE
	
	Minus
	Plus
	Divide
	Multiply
	
	And
	Or
end

adt AstExpr
	Id(id:string)
	Dot(lhs:AstExpr, id:string)
	New(type:AstType)
	Call(head:AstExpr, args:AstExprList)
	Index(lhs:AstExpr, rhs:AstExpr)
	BinOp(lhs:AstExpr, op:BinOp, rhs:AstExpr)
	StringLit(content:string)
	NumberLit(content:string)
	
	field loc:SrcLoc
end


