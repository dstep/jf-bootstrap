function LLVMContextCreate():pointer import "LLVMContextCreate"
function LLVMModuleCreateWithNameInContext(name:string, content:pointer):pointer import "LLVMModuleCreateWithNameInContext"
function LLVMPrintModuleToString(module:pointer):string import "LLVMPrintModuleToString"

function LLVMPointerType(elementType:pointer, address:i32):pointer import "LLVMPointerType"

function LLVMInt1TypeInContext(context:pointer):pointer import "LLVMInt1TypeInContext"
function LLVMInt8TypeInContext(context:pointer):pointer import "LLVMInt8TypeInContext"
function LLVMInt32TypeInContext(context:pointer):pointer import "LLVMInt32TypeInContext"

function LLVMVoidTypeInContext(context:pointer):pointer import "LLVMVoidTypeInContext"

function LLVMFunctionType(returnType:pointer, paramTypes:pointer, paramCount:i32, vararg:bool):pointer import "LLVMFunctionType"

function LLVMAddFunction(module:pointer, name:string, type:pointer):pointer import "LLVMAddFunction"

function LLVMGetParam(func:pointer, idx:i32):pointer import "LLVMGetParam"

function LLVMSetValueName(value:pointer, name:string) import "LLVMSetValueName"

-- Globals
function LLVMAddGlobal(module:pointer, type:pointer, name:string):pointer import "LLVMAddGlobal"
function LLVMGetNamedGlobal(module:pointer, name:string):pointer import "LLVMGetNamedGlobal"

function LLVMSetLinkage(value:pointer, linkage:i32) import "LLVMSetLinkage"

function LLVMSetInitializer(variable:pointer, value:pointer) import "LLVMSetInitializer"

--Basic Blocks
function LLVMGetEntryBasicBlock(func:pointer):pointer import "LLVMGetEntryBasicBlock"

function LLVMAppendBasicBlockInContext(context:pointer, func:pointer, name:string):pointer import "LLVMAppendBasicBlockInContext"

--IR Builder
function LLVMCreateBuilderInContext(context:pointer):pointer import "LLVMCreateBuilderInContext"
function LLVMPositionBuilderAtEnd(builder:pointer, bb:pointer) import "LLVMPositionBuilderAtEnd"

function LLVMBuildUnreachable(builder:pointer):pointer import "LLVMBuildUnreachable"

function LLVMBuildAlloca(builder:pointer, type:pointer, name:string):pointer import "LLVMBuildAlloca"
function LLVMBuildStore(builder:pointer, value:pointer, ptr:pointer):pointer import "LLVMBuildStore"
function LLVMBuildLoad(builder:pointer, value:pointer, name:string):pointer import "LLVMBuildLoad"

function LLVMBuildBr(builder:pointer, bb:pointer):pointer import "LLVMBuildBr"
function LLVMBuildCondBr(builder:pointer, if_:pointer, then_:pointer, else_:pointer):pointer import "LLVMBuildCondBr"

function LLVMBuildRetVoid(builder:pointer):pointer import "LLVMBuildRetVoid"
function LLVMBuildRet(builder:pointer, value:pointer):pointer import "LLVMBuildRet"

-- Values
function LLVMTypeOf(value:pointer):pointer import "LLVMTypeOf"

-- Constants
function LLVMConstInt_wrap(type:pointer, n:i32, sign:bool):pointer import "LLVMConstInt_wrap"
function LLVMConstStringInContext(context:pointer, str:string, length:i32, dontNullTerminate:bool):pointer import "LLVMConstStringInContext"

-- Constant Expr

function LLVMConstBitCast(const:pointer, type:pointer):pointer import "LLVMConstBitCast"

-- Enums

function LLVMPrivateLinkage():i32 import "jfprelude_LLVMPrivateLinkage"